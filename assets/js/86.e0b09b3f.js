(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{566:function(t,v,_){"use strict";_.r(v);var r=_(4),s=Object(r.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("p",[t._v("概率论与数理统计")]),t._v(" "),_("p",[t._v("线性代数")]),t._v(" "),_("p",[t._v("最优化方法")]),t._v(" "),_("p",[t._v("图论")]),t._v(" "),_("h2",{attrs:{id:"决策树"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#决策树"}},[t._v("#")]),t._v(" 决策树")]),t._v(" "),_("h3",{attrs:{id:"id3算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#id3算法"}},[t._v("#")]),t._v(" ID3算法")]),t._v(" "),_("p",[t._v("基于信息增益做判断")]),t._v(" "),_("h3",{attrs:{id:"c4-5算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#c4-5算法"}},[t._v("#")]),t._v(" C4.5算法")]),t._v(" "),_("p",[t._v("基于信息增益率做判断")]),t._v(" "),_("h3",{attrs:{id:"cart算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cart算法"}},[t._v("#")]),t._v(" CART算法")]),t._v(" "),_("p",[_("strong",[t._v("分类树")])]),t._v(" "),_("p",[t._v("基于基尼系数做判断")]),t._v(" "),_("p",[t._v("GINI系数：反应样本的不确定度")]),t._v(" "),_("p",[t._v("sklearn工具："),_("code",[t._v("DecisionTreeClassifier")])]),t._v(" "),_("p",[_("strong",[t._v("回归树")])]),t._v(" "),_("p",[t._v("基于偏差做判断")]),t._v(" "),_("p",[t._v("节点划分标准：最小绝对偏差，或者使用最小乘偏差")]),t._v(" "),_("p",[t._v("sklearn工具："),_("code",[t._v("DecisionTreeRegressor")])]),t._v(" "),_("p",[_("strong",[t._v("CCP剪枝")])]),t._v(" "),_("p",[t._v("后剪枝方法："),_("code",[t._v("cost-complelty prune")]),t._v(" 中文叫做代价复杂度")]),t._v(" "),_("p",[t._v("基于表面误差率增益值，来判断剪枝前后的误差，从而生成子树序列")]),t._v(" "),_("p",[t._v("通过验证集，在第一步生成的子树序列中找到最优决策树")]),t._v(" "),_("h2",{attrs:{id:"朴素贝叶斯分类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#朴素贝叶斯分类"}},[t._v("#")]),t._v(" 朴素贝叶斯分类")])])}),[],!1,null,null,null);v.default=s.exports}}]);